#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// Layer definitions

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define TOP     3

// Home Row Mods configuration

#define DIFFICULTY_LEVEL  0  // 0:custom, 1:easy -> 5:hard

// Set default tapping term (if DIFFICULTY_LEVEL=0)

#ifndef TAPPING_RESOLUTION

#define TAPPING_RESOLUTION 150  // Custom value (150ms)

#endif

// Configure the tapping term based on difficulty level
#ifdef DIFFICULTY_LEVEL
    #if DIFFICULTY_LEVEL > 0 && DIFFICULTY_LEVEL < 6
        #ifndef TAPPING_RESOLUTION

#define TAPPING_RESOLUTION ((6 - DIFFICULTY_LEVEL) * 100)

#endif
    #endif
#endif

// Define holds for bilateral (cross-hand) activation

#define ENFORCE_BILATERAL    // cancels single-handed home row mod+tap

// Set the mod keys for home row (pinky to index: super, alt, ctrl, shift)

#define PINKY_FINGER_MOD LGUI  // Super/GUI
#define RING1_FINGER_MOD LALT  // Alt
#define MIDDY_FINGER_MOD LCTL  // Ctrl
#define INDEX_FINGER_MOD LSFT  // Shift

// Define holding times for each finger

#ifndef HOMEY_HOLDING_TIME

#define HOMEY_HOLDING_TIME (TAPPING_RESOLUTION + 90)

#endif
#ifndef INDEX_HOLDING_TIME

#define INDEX_HOLDING_TIME (TAPPING_RESOLUTION + 20)

#endif
#ifndef MIDDY_HOLDING_TIME

#define MIDDY_HOLDING_TIME (TAPPING_RESOLUTION + 60)

#endif
#ifndef RING1_HOLDING_TIME

#define RING1_HOLDING_TIME (TAPPING_RESOLUTION + 90)

#endif
#ifndef PINKY_HOLDING_TIME

#define PINKY_HOLDING_TIME (TAPPING_RESOLUTION + 110)

#endif

// Define streak decay times
#ifndef HOMEY_STREAK_DECAY

#define HOMEY_STREAK_DECAY TAPPING_RESOLUTION

#endif
#ifndef INDEX_STREAK_DECAY

#define INDEX_STREAK_DECAY (TAPPING_RESOLUTION - 50)

#endif
#ifndef MIDDY_STREAK_DECAY

#define MIDDY_STREAK_DECAY HOMEY_STREAK_DECAY

#endif
#ifndef RING1_STREAK_DECAY

#define RING1_STREAK_DECAY HOMEY_STREAK_DECAY

#endif
#ifndef PINKY_STREAK_DECAY

#define PINKY_STREAK_DECAY HOMEY_STREAK_DECAY

#endif

// Define repeat decay times
#ifndef HOMEY_REPEAT_DECAY

#define HOMEY_REPEAT_DECAY (TAPPING_RESOLUTION + 150)

#endif
#ifndef INDEX_REPEAT_DECAY

#define INDEX_REPEAT_DECAY (TAPPING_RESOLUTION + 150)

#endif
#ifndef MIDDY_REPEAT_DECAY

#define MIDDY_REPEAT_DECAY HOMEY_REPEAT_DECAY

#endif
#ifndef RING1_REPEAT_DECAY

#define RING1_REPEAT_DECAY HOMEY_REPEAT_DECAY

#endif
#ifndef PINKY_REPEAT_DECAY

#define PINKY_REPEAT_DECAY HOMEY_REPEAT_DECAY

#endif

// Define key position groups for home row mods

#define LEFT_HAND_KEYS 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29  // left-hand keys
#define RIGHT_HAND_KEYS 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35  // right-hand keys
#define THUMB_KEYS 36 37 38 39 40 41  // thumb keys

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        // Home Row Mods - Left Hand
        // Pinky - LGUI/Super (A key)

        hml_pinky: hml_pinky {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";

            #ifdef ENFORCE_BILATERAL

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
            #endif
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <PINKY_HOLDING_TIME>;
            quick-tap-ms = <PINKY_REPEAT_DECAY>;
            require-prior-idle-ms = <PINKY_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        // Ring - LALT (S key)

        hml_ring: hml_ring {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";

            #ifdef ENFORCE_BILATERAL

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
            #endif
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <RING1_HOLDING_TIME>;
            quick-tap-ms = <RING1_REPEAT_DECAY>;
            require-prior-idle-ms = <RING1_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        // Middle - LCTL (D key)

        hml_middle: hml_middle {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";

            #ifdef ENFORCE_BILATERAL

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
            #endif
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <MIDDY_HOLDING_TIME>;
            quick-tap-ms = <MIDDY_REPEAT_DECAY>;
            require-prior-idle-ms = <MIDDY_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        // Index - LSFT (F key)

        hml_index: hml_index {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";

            #ifdef ENFORCE_BILATERAL

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
            #endif
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <INDEX_HOLDING_TIME>;
            quick-tap-ms = <INDEX_REPEAT_DECAY>;
            require-prior-idle-ms = <INDEX_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        // Home Row Mods - Right Hand
        // Index - RSFT (J key)

        hmr_index: hmr_index {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";

            #ifdef ENFORCE_BILATERAL

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
            #endif
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <INDEX_HOLDING_TIME>;
            quick-tap-ms = <INDEX_REPEAT_DECAY>;
            require-prior-idle-ms = <INDEX_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        // Middle - RCTL (K key)

        hmr_middle: hmr_middle {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";

            #ifdef ENFORCE_BILATERAL

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
            #endif
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <MIDDY_HOLDING_TIME>;
            quick-tap-ms = <MIDDY_REPEAT_DECAY>;
            require-prior-idle-ms = <MIDDY_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        // Ring - RALT (L key)

        hmr_ring: hmr_ring {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";

            #ifdef ENFORCE_BILATERAL

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
            #endif
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <RING1_HOLDING_TIME>;
            quick-tap-ms = <RING1_REPEAT_DECAY>;
            require-prior-idle-ms = <RING1_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        // Pinky - RGUI/Super (;/: key)

        hmr_pinky: hmr_pinky {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";

            #ifdef ENFORCE_BILATERAL

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
            #endif
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <PINKY_HOLDING_TIME>;
            quick-tap-ms = <PINKY_REPEAT_DECAY>;
            require-prior-idle-ms = <PINKY_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W             &kp E                       &kp R                    &kp T                                  &kp UP                &kp Y                &kp U                     &kp I                        &kp O             &kp P                 &kp F12
&kp ESC    &kp A  &hml_ring LALT S  &hml_middle LEFT_CONTROL D  &hml_index LEFT_SHIFT F  &kp G                        &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                &hmr_index RIGHT_SHIFT J  &hmr_middle RIGHT_CONTROL K  &hmr_ring RALT L  &hmr_pinky RGUI SEMI  &kp RC(PAGE_UP)
&kp LSHFT  &kp Z  &kp X             &kp C                       &kp V                    &kp B               &none              &kp DOWN              &kp N                &kp M                     &kp COMMA                    &kp DOT           &kp FSLH              &kp ESC
                                    &lt 1 BACKSPACE             &kp DELETE               &kp LA(LEFT_ARROW)                                           &kp RA(RIGHT_ARROW)  &kp ENTER                 &lt 1 SPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Symbols {
            bindings = <
&kp PIPE              &kp LEFT_BRACE        &kp SQT        &kp GRAVE       &kp DOUBLE_QUOTES  &kp RIGHT_BRACE                          &trans          &trans          &trans          &trans        &trans           &trans  &trans
&kp NON_US_BACKSLASH  &kp LEFT_PARENTHESIS  &kp LESS_THAN  &kp EQUAL       &kp GREATER_THAN   &kp RIGHT_PARENTHESIS            &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&kp QUESTION          &kp LEFT_BRACKET      &kp MINUS      &kp UNDERSCORE  &kp PLUS           &kp RIGHT_BRACKET      &trans            &trans          &trans          &trans          &trans        &trans           &trans  &trans
                                                           &kp COLON       &kp SLASH          &kp TILDE                                                &trans          &trans          &trans
            >;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
